module.exports = {
  'accessor-pairs': 'enforce getter and setter pairs in objects',
  'array-callback-return': 'enforce `return` statements in callbacks of array methods',
  'block-scoped-var': 'enforce the use of variables within the scope they are defined',
  'class-methods-use-this': 'enforce that class methods utilize `this`',
  complexity: 'enforce a maximum cyclomatic complexity allowed in a program',
  'consistent-return': 'require `return` statements to either always or never specify values',
  curly: 'enforce consistent brace style for all control statements',
  'default-case': 'require `default` cases in `switch` statements',
  'dot-location': 'enforce consistent newlines before and after dots',
  'dot-notation': 'enforce dot notation whenever possible',
  eqeqeq: 'require the use of `===` and `!==`',
  'guard-for-in': 'require `for-in` loops to include an `if` statement',
  'max-classes-per-file': 'enforce a maximum number of classes per file',
  'no-alert': 'disallow the use of `alert`, `confirm`, and `prompt`',
  'no-caller': 'disallow the use of `arguments.caller` or `arguments.callee`',
  'no-case-declarations': 'disallow lexical declarations in case clauses',
  'no-div-regex': 'disallow division operators explicitly at the beginning of regular expressions',
  'no-else-return': 'disallow `else` blocks after `return` statements in `if` statements',
  'no-empty-function': 'disallow empty functions',
  'no-empty-pattern': 'disallow empty destructuring patterns',
  'no-eq-null': 'disallow `null` comparisons without type-checking operators',
  'no-eval': 'disallow the use of `eval()`',
  'no-extend-native': 'disallow extending native types',
  'no-extra-bind': 'disallow unnecessary calls to `.bind()`',
  'no-extra-label': 'disallow unnecessary labels',
  'no-fallthrough': 'disallow fallthrough of `case` statements',
  'no-floating-decimal': 'disallow leading or trailing decimal points in numeric literals',
  'no-global-assign': 'disallow assignments to native objects or read-only global variables',
  'no-implicit-coercion': 'disallow shorthand type conversions',
  'no-implicit-globals': 'disallow variable and `function` declarations in the global scope',
  'no-implied-eval': 'disallow the use of `eval()`-like methods',
  'no-invalid-this': 'disallow `this` keywords outside of classes or class-like objects',
  'no-iterator': 'disallow the use of the `__iterator__` property',
  'no-labels': 'disallow labeled statements',
  'no-lone-blocks': 'disallow unnecessary nested blocks',
  'no-loop-func': 'disallow function declarations that contain unsafe references inside loop statements',
  'no-magic-numbers': 'disallow magic numbers',
  'no-multi-spaces': 'disallow multiple spaces',
  'no-multi-str': 'disallow multiline strings',
  'no-native-reassign': 'disallow assignments to native objects or read-only global variables',
  'no-new': 'disallow `new` operators outside of assignments or comparisons',
  'no-new-func': 'disallow `new` operators with the `Function` object',
  'no-new-wrappers': 'disallow `new` operators with the `String`, `Number`, and `Boolean` objects',
  'no-octal': 'disallow octal literals',
  'no-octal-escape': 'disallow octal escape sequences in string literals',
  'no-param-reassign': 'disallow reassigning `function` parameters',
  'no-proto': 'disallow the use of the `__proto__` property',
  'no-redeclare': 'disallow variable redeclaration',
  'no-restricted-properties': 'disallow certain properties on certain objects',
  'no-return-assign': 'disallow assignment operators in `return` statements',
  'no-return-await': 'disallow unnecessary `return await`',
  'no-script-url': 'disallow `javascript:` urls',
  'no-self-assign': 'disallow assignments where both sides are exactly the same',
  'no-self-compare': 'disallow comparisons where both sides are exactly the same',
  'no-sequences': 'disallow comma operators',
  'no-throw-literal': 'disallow throwing literals as exceptions',
  'no-unmodified-loop-condition': 'disallow unmodified loop conditions',
  'no-unused-expressions': 'disallow unused expressions',
  'no-unused-labels': 'disallow unused labels',
  'no-useless-call': 'disallow unnecessary calls to `.call()` and `.apply()`',
  'no-useless-catch': 'disallow unnecessary `catch` clauses',
  'no-useless-concat': 'disallow unnecessary concatenation of literals or template literals',
  'no-useless-escape': 'disallow unnecessary escape characters',
  'no-useless-return': 'disallow redundant return statements',
  'no-void': 'disallow `void` operators',
  'no-warning-comments': 'disallow specified warning terms in comments',
  'no-with': 'disallow `with` statements',
  'prefer-named-capture-group': 'enforce using named capture group in regular expression',
  'prefer-promise-reject-errors': 'require using Error objects as Promise rejection reasons',
  radix: 'enforce the consistent use of the radix argument when using `parseInt()`',
  'require-await': 'disallow async functions which have no `await` expression',
  'require-unicode-regexp': 'enforce the use of `u` flag on RegExp',
  'vars-on-top': 'require `var` declarations be placed at the top of their containing scope',
  'wrap-iife': 'require parentheses around immediate `function` invocations',
  yoda: 'require or disallow "Yoda" conditions'
};
