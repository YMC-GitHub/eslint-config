module.exports = {
  'for-direction': 'enforce "for" loop update clause moving the counter in the right direction.',
  'getter-return': 'enforce `return` statements in getters',
  'no-async-promise-executor': 'disallow using an async function as a Promise executor',
  'no-await-in-loop': 'disallow `await` inside of loops',
  'no-compare-neg-zero': 'disallow comparing against -0',
  'no-cond-assign': 'disallow assignment operators in conditional expressions',
  'no-console': 'disallow the use of `console`',
  'no-constant-condition': 'disallow constant expressions in conditions',
  'no-control-regex': 'disallow control characters in regular expressions',
  'no-debugger': 'disallow the use of `debugger`',
  'no-dupe-args': 'disallow duplicate arguments in `function` definitions',
  'no-dupe-keys': 'disallow duplicate keys in object literals',
  'no-duplicate-case': 'disallow duplicate case labels',
  'no-empty': 'disallow empty block statements',
  'no-empty-character-class': 'disallow empty character classes in regular expressions',
  'no-ex-assign': 'disallow reassigning exceptions in `catch` clauses',
  'no-extra-boolean-cast': 'disallow unnecessary boolean casts',
  'no-extra-parens': 'disallow unnecessary parentheses',
  'no-extra-semi': 'disallow unnecessary semicolons',
  'no-func-assign': 'disallow reassigning `function` declarations',
  'no-inner-declarations': 'disallow variable or `function` declarations in nested blocks',
  'no-invalid-regexp': 'disallow invalid regular expression strings in `RegExp` constructors',
  'no-irregular-whitespace': 'disallow irregular whitespace',
  'no-misleading-character-class': 'disallow characters which are made with multiple code points in character class syntax',
  'no-negated-in-lhs': 'disallow negating the left operand in `in` expressions',
  'no-obj-calls': 'disallow calling global object properties as functions',
  'no-prototype-builtins': 'disallow calling some `Object.prototype` methods directly on objects',
  'no-regex-spaces': 'disallow multiple spaces in regular expressions',
  'no-sparse-arrays': 'disallow sparse arrays',
  'no-template-curly-in-string': 'disallow template literal placeholder syntax in regular strings',
  'no-unexpected-multiline': 'disallow confusing multiline expressions',
  'no-unreachable': 'disallow unreachable code after `return`, `throw`, `continue`, and `break` statements',
  'no-unsafe-finally': 'disallow control flow statements in `finally` blocks',
  'no-unsafe-negation': 'disallow negating the left operand of relational operators',
  'require-atomic-updates': 'disallow assignments that can lead to race conditions due to usage of `await` or `yield`',
  'use-isnan': 'require calls to `isNaN()` when checking for `NaN`',
  'valid-jsdoc': 'enforce valid JSDoc comments',
  'valid-typeof': 'enforce comparing `typeof` expressions against valid strings'
};
