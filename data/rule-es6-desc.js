module.exports = {
  'arrow-body-style': 'require braces around arrow function bodies',
  'arrow-parens': 'require parentheses around arrow function arguments',
  'arrow-spacing': 'enforce consistent spacing before and after the arrow in arrow functions',
  'constructor-super': 'require `super()` calls in constructors',
  'generator-star-spacing': 'enforce consistent spacing around `*` operators in generator functions',
  'no-class-assign': 'disallow reassigning class members',
  'no-confusing-arrow': 'disallow arrow functions where they could be confused with comparisons',
  'no-const-assign': 'disallow reassigning `const` variables',
  'no-dupe-class-members': 'disallow duplicate class members',
  'no-duplicate-imports': 'disallow duplicate module imports',
  'no-new-symbol': 'disallow `new` operators with the `Symbol` object',
  'no-restricted-imports': 'disallow specified modules when loaded by `import`',
  'no-this-before-super': 'disallow `this`/`super` before calling `super()` in constructors',
  'no-useless-computed-key': 'disallow unnecessary computed property keys in object literals',
  'no-useless-constructor': 'disallow unnecessary constructors',
  'no-useless-rename': 'disallow renaming import, export, and destructured assignments to the same name',
  'no-var': 'require `let` or `const` instead of `var`',
  'object-shorthand': 'require or disallow method and property shorthand syntax for object literals',
  'prefer-arrow-callback': 'require using arrow functions for callbacks',
  'prefer-const': 'require `const` declarations for variables that are never reassigned after declared',
  'prefer-destructuring': 'require destructuring from arrays and/or objects',
  'prefer-numeric-literals': 'disallow `parseInt()` and `Number.parseInt()` in favor of binary, octal, and hexadecimal literals',
  'prefer-reflect': 'require `Reflect` methods where applicable',
  'prefer-rest-params': 'require rest parameters instead of `arguments`',
  'prefer-spread': 'require spread operators instead of `.apply()`',
  'prefer-template': 'require template literals instead of string concatenation',
  'require-yield': 'require generator functions to contain `yield`',
  'rest-spread-spacing': 'enforce spacing between rest and spread operators and their expressions',
  'sort-imports': 'enforce sorted import declarations within modules',
  'symbol-description': 'require symbol descriptions',
  'template-curly-spacing': 'require or disallow spacing around embedded expressions of template strings',
  'yield-star-spacing': 'require or disallow spacing around the `*` in `yield*` expressions'
};
